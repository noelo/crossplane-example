apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: nocsqldb-cosmosdb-composition
  labels:
    crossplane.io/xrd: znosqldbs.runtime.madgrape.com
    provider: default
spec:
  compositeTypeRef:
    apiVersion: runtime.madgrape.com/v1alpha1
    kind: ZNoSQLDb
  writeConnectionSecretsToNamespace: crossplane-system
  
  resources:
  - name : resource-group
    base:
      apiVersion: azure.jet.crossplane.io/v1alpha2
      kind: ResourceGroup
      metadata:
        name: replaced-by-patches
      spec:
        forProvider:
          location: replaced-by-patches
        providerConfigRef: 
          name: replaced-by-patches
    patches:
      - type: FromCompositeFieldPath
        fromFieldPath: spec.parameters.resourceGroup
        toFieldPath: metadata.name
      - type: FromCompositeFieldPath
        fromFieldPath: spec.parameters.location
        toFieldPath: spec.forProvider.location
      - type: FromCompositeFieldPath
        fromFieldPath: spec.parameters.providerConfigName
        toFieldPath: spec.providerConfigRef.name
  - name: cosmosdb-account
    base:
      apiVersion: cosmosdb.azure.jet.crossplane.io/v1alpha2
      kind: Account
      spec:
        forProvider: 
          enableFreeTier: true
          kind: GlobalDocumentDB 
          offerType: Standard 
          location: replaced-by-patches
          backup: 
          - type: Continuous 
          consistencyPolicy:
          - consistencyLevel: Session 
          resourceGroupName: replaced-by-patches
          geoLocation:
          - failoverPriority: 0 
            location: "westus" 
            zoneRedundant: False 
        providerConfigRef:
          name: replaced-by-patches
        writeConnectionSecretToRef:
          namespace: replaced-by-patches
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: "spec.writeConnectionSecretToRef.name"
      transforms:
        - type: string
          string:
            fmt: "%s-cosmosdb-conn"
    - type: FromCompositeFieldPath
      fromFieldPath: spec.claimRef.namespace
      toFieldPath: spec.writeConnectionSecretToRef.namespace
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.providerConfigName
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.resourceGroup
      toFieldPath: spec.forProvider.resourceGroupName
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.location
      toFieldPath: spec.forProvider.location
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      transforms:
      - type: string
        string:
          fmt: "%s-account"
    connectionDetails:
    - name: primary_connection
      fromConnectionSecretKey: attribute.connection_string.0
    - name: primary_readonly_connection
      fromConnectionSecretKey: attribute.connection_string.2
    - name: secondary_connection
      fromConnectionSecretKey: attribute.connection_string.1
    - name: secondary_readonly_connection
      fromConnectionSecretKey: attribute.connection_string.3
  - name: cosmosdb-sqldatabase
    base:
      apiVersion: cosmosdb.azure.jet.crossplane.io/v1alpha2
      kind: SQLDatabase
      spec:
        forProvider:
          resourceGroupName: replaced-by-patches
          accountNameSelector:
            matchControllerRef: true
          throughput: 400
        providerConfigRef:
          name: replaced-by-patches
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.providerConfigName
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.resourceGroup
      toFieldPath: spec.forProvider.resourceGroupName
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      transforms:
      - type: string
        string:
          fmt: "%s-database"

  - name: cosmosdb-sqlcontainer
    base:
      apiVersion: cosmosdb.azure.jet.crossplane.io/v1alpha2
      kind: SQLContainer
      spec:
        forProvider:
          resourceGroupName: replaced-by-patches
          accountNameSelector:
            matchControllerRef: true
          databaseNameSelector:
            matchControllerRef: true
          partitionKeyPath: replaced-by-patches
          partitionKeyVersion: 1
          throughput: 400
        providerConfigRef:
          name: replaced-by-patches
    patches:
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.providerConfigName
      toFieldPath: spec.providerConfigRef.name
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.partitionKeyPath
      toFieldPath: spec.forProvider.partitionKeyPath
    - type: FromCompositeFieldPath
      fromFieldPath: spec.parameters.resourceGroup
      toFieldPath: spec.forProvider.resourceGroupName
    - type: FromCompositeFieldPath
      fromFieldPath: metadata.annotations[crossplane.io/external-name]
      toFieldPath: metadata.annotations[crossplane.io/external-name]
      transforms:
      - type: string
        string:
          fmt: "%s-container"